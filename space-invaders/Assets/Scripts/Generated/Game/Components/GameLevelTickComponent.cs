//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity levelTickEntity { get { return GetGroup(GameMatcher.LevelTick).GetSingleEntity(); } }
    public Common.LevelTickComponent levelTick { get { return levelTickEntity.levelTick; } }
    public bool hasLevelTick { get { return levelTickEntity != null; } }

    public GameEntity SetLevelTick(long newCurrentTick) {
        if (hasLevelTick) {
            throw new Entitas.EntitasException("Could not set LevelTick!\n" + this + " already has an entity with Common.LevelTickComponent!",
                "You should check if the context already has a levelTickEntity before setting it or use context.ReplaceLevelTick().");
        }
        var entity = CreateEntity();
        entity.AddLevelTick(newCurrentTick);
        return entity;
    }

    public void ReplaceLevelTick(long newCurrentTick) {
        var entity = levelTickEntity;
        if (entity == null) {
            entity = SetLevelTick(newCurrentTick);
        } else {
            entity.ReplaceLevelTick(newCurrentTick);
        }
    }

    public void RemoveLevelTick() {
        levelTickEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Common.LevelTickComponent levelTick { get { return (Common.LevelTickComponent)GetComponent(GameComponentsLookup.LevelTick); } }
    public bool hasLevelTick { get { return HasComponent(GameComponentsLookup.LevelTick); } }

    public void AddLevelTick(long newCurrentTick) {
        var index = GameComponentsLookup.LevelTick;
        var component = (Common.LevelTickComponent)CreateComponent(index, typeof(Common.LevelTickComponent));
        component.currentTick = newCurrentTick;
        AddComponent(index, component);
    }

    public void ReplaceLevelTick(long newCurrentTick) {
        var index = GameComponentsLookup.LevelTick;
        var component = (Common.LevelTickComponent)CreateComponent(index, typeof(Common.LevelTickComponent));
        component.currentTick = newCurrentTick;
        ReplaceComponent(index, component);
    }

    public void RemoveLevelTick() {
        RemoveComponent(GameComponentsLookup.LevelTick);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLevelTick;

    public static Entitas.IMatcher<GameEntity> LevelTick {
        get {
            if (_matcherLevelTick == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LevelTick);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLevelTick = matcher;
            }

            return _matcherLevelTick;
        }
    }
}
