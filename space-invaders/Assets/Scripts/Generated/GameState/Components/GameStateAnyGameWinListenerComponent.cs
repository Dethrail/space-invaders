//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public AnyGameWinListenerComponent anyGameWinListener { get { return (AnyGameWinListenerComponent)GetComponent(GameStateComponentsLookup.AnyGameWinListener); } }
    public bool hasAnyGameWinListener { get { return HasComponent(GameStateComponentsLookup.AnyGameWinListener); } }

    public void AddAnyGameWinListener(System.Collections.Generic.List<IAnyGameWinListener> newValue) {
        var index = GameStateComponentsLookup.AnyGameWinListener;
        var component = (AnyGameWinListenerComponent)CreateComponent(index, typeof(AnyGameWinListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyGameWinListener(System.Collections.Generic.List<IAnyGameWinListener> newValue) {
        var index = GameStateComponentsLookup.AnyGameWinListener;
        var component = (AnyGameWinListenerComponent)CreateComponent(index, typeof(AnyGameWinListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyGameWinListener() {
        RemoveComponent(GameStateComponentsLookup.AnyGameWinListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherAnyGameWinListener;

    public static Entitas.IMatcher<GameStateEntity> AnyGameWinListener {
        get {
            if (_matcherAnyGameWinListener == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.AnyGameWinListener);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherAnyGameWinListener = matcher;
            }

            return _matcherAnyGameWinListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public void AddAnyGameWinListener(IAnyGameWinListener value) {
        var listeners = hasAnyGameWinListener
            ? anyGameWinListener.value
            : new System.Collections.Generic.List<IAnyGameWinListener>();
        listeners.Add(value);
        ReplaceAnyGameWinListener(listeners);
    }

    public void RemoveAnyGameWinListener(IAnyGameWinListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyGameWinListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyGameWinListener();
        } else {
            ReplaceAnyGameWinListener(listeners);
        }
    }
}
