//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateContext {

    public GameStateEntity livesEntity { get { return GetGroup(GameStateMatcher.Lives).GetSingleEntity(); } }
    public Common.LivesComponent lives { get { return livesEntity.lives; } }
    public bool hasLives { get { return livesEntity != null; } }

    public GameStateEntity SetLives(int newValue) {
        if (hasLives) {
            throw new Entitas.EntitasException("Could not set Lives!\n" + this + " already has an entity with Common.LivesComponent!",
                "You should check if the context already has a livesEntity before setting it or use context.ReplaceLives().");
        }
        var entity = CreateEntity();
        entity.AddLives(newValue);
        return entity;
    }

    public void ReplaceLives(int newValue) {
        var entity = livesEntity;
        if (entity == null) {
            entity = SetLives(newValue);
        } else {
            entity.ReplaceLives(newValue);
        }
    }

    public void RemoveLives() {
        livesEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public Common.LivesComponent lives { get { return (Common.LivesComponent)GetComponent(GameStateComponentsLookup.Lives); } }
    public bool hasLives { get { return HasComponent(GameStateComponentsLookup.Lives); } }

    public void AddLives(int newValue) {
        var index = GameStateComponentsLookup.Lives;
        var component = (Common.LivesComponent)CreateComponent(index, typeof(Common.LivesComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLives(int newValue) {
        var index = GameStateComponentsLookup.Lives;
        var component = (Common.LivesComponent)CreateComponent(index, typeof(Common.LivesComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLives() {
        RemoveComponent(GameStateComponentsLookup.Lives);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherLives;

    public static Entitas.IMatcher<GameStateEntity> Lives {
        get {
            if (_matcherLives == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.Lives);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherLives = matcher;
            }

            return _matcherLives;
        }
    }
}
